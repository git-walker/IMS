<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.rootyu.rad.modules.stafrock.dao.StainfoDao">

	<sql id="StainfoColumns">

       a.id              AS "id",
       a.calbodyid      AS "calbodyid",
       a.pk_wkcenter     AS "pkWkcenter",
       a.pk_corp         AS "pkCorp",
       a.create_by       AS "createBy.id",
       a.create_date     AS "createDate",
       a.update_by       AS "updateBy.id",
       a.update_date     AS "updateDate",
       a.remarks         AS "remarks",
       a.del_flag        AS "delFlag",
       a.pk_cwarehouseid AS "pkCwarehouseid",
       a.pk_storekeeper  AS "pkStorekeeper",
       a.FROCKTYPE as "frockType",
       a.match_principle AS "matchPrinciple",
       u.id AS "user.id",
       u.name AS "user.name",
       s.id AS "stordoc.id",
       s.storname AS "stordoc.storname",
       w.gzzxbm AS "wk.gzzxbm",
       w.gzzxmc AS "wk.gzzxmc",
       o.id AS "office.id",
       o.name AS "office.name"
    </sql>
	<sql id="StainfoJoins">
     LEFT JOIN sys_user u ON u.id=a.pk_storekeeper 
     LEFT JOIN llm_stordoc s ON s.id= a.pk_cwarehouseid
     LEFT JOIN llm_wk w ON w.id=a.pk_wkcenter
     LEFT JOIN sys_office o ON  o.id=s.PK_RESERVOIRID
     LEFT JOIN LLM_CALBODY c ON c.id= a.calbodyid
	</sql>
	
	
	
	<select id="get" resultType="Stainfo">
		SELECT 
			<include refid="StainfoColumns"/>
		FROM llm_wkstadoc a
		<include refid="StainfoJoins"/>
		WHERE a.id = #{id}
	</select>
	
	  	
    <select id="findPage" resultType="Stainfo">
		SELECT 
			<include refid="StainfoColumns"/>
		FROM llm_wkstadoc a
		<include refid="StainfoJoins"/>
		WHERE a.id = #{id}
	</select>

	
	<select id="findList" resultType="Stainfo">
        SELECT 
			<include refid="StainfoColumns"/>
		FROM llm_wkstadoc a
		<include refid="StainfoJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="pkWkcenter != null and pkWkcenter != ''">
				AND a.pk_wkcenter = #{pkWkcenter}
			</if>
			<if test="wk != null">
				<if test="wk.id != null and wk.id != ''">
					AND a.pk_wkcenter = #{wk.id}
				</if>
			</if>
			<if test="pkCwarehouseid != null and pkCwarehouseid != ''">
				AND a.pk_cwarehouseid = #{pkCwarehouseid}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY o.name
			</otherwise>
		</choose>
	</select>
	
	<select id="checkValues" resultType="Stainfo" parameterType="String">
		SELECT 
			<include refid="StainfoColumns"/>
		FROM llm_wkstadoc a
		<include refid="StainfoJoins"/>
		<where>
			a.id = #{id}
		</where>
	</select>		
	
	<insert id="insert">
		INSERT INTO llm_wkstadoc(
			id,
			calbodyid,
			pk_wkcenter,
			pk_corp,
			match_principle,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag,
			pk_cwarehouseid,
			pk_storekeeper,
			FROCKTYPE
		) VALUES (
			#{id},
			#{calbodyid},
			#{pkWkcenter},
			#{pkCorp},
			#{matchPrinciple},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag},
			#{pkCwarehouseid},
			#{pkStorekeeper},
			#{frockType}
		)
	</insert>
	
	<update id="update">
		UPDATE llm_wkstadoc SET 
			pk_wkcenter = #{pkWkcenter},
			remarks = #{remarks},
			pk_cwarehouseid = #{pkCwarehouseid},
			pk_storekeeper = #{pkStorekeeper},
			FROCKTYPE = #{frockType},
			match_principle = #{matchPrinciple},
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE id = #{id}
		  and del_flag = #{DEL_FLAG_NORMAL}
	</update>
	
	<update id="delete">
		UPDATE llm_wkstadoc SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
		
	<select id="findStordocList" resultType="Stordoc">
		SELECT distinct
			a.storname AS "storname",
			a.id AS "id",
			a.storcode as "storcode",
			a.sealflag as "sealflag"
		FROM llm_stordoc a
		where a.pk_corp =#{ERP_CORP_ID} and a.del_flag =#{DEL_FLAG_NORMAL}
		ORDER BY a.storcode ASC 
	</select>

	<select id="findWkList" resultType="Wk">
		SELECT
			a.id AS "id",
			a.gzzxbm||'('||o.name||')'  AS "gzzxbm",
			a.gzzxmc||'('||o.name||')' AS "gzzxmc",
			a.pk_corp AS "pk_corp",
			a.pk_wkclassid as "pk_wkclassid",
			a.ssbmid as "ssbmid",
			o.name as "office.name",
			o.id as "office.id"
		FROM llm_wk a 
		left join sys_office o on a.ssbmid=o.id
		where a.pk_corp =#{ERP_CORP_ID} and a.del_flag =#{DEL_FLAG_NORMAL}
		ORDER BY a.gzzxbm ASC
	</select>
	
	<select id="findStorList" resultType="User">
		SELECT 
			a.id AS "id",
			a.name AS "name",
			a.office_id AS "office.id"
		FROM sys_user a
		where a.office_id = (select o.id from sys_office o where o.id=(select t.pk_reservoirid from llm_stordoc t where t.id=#{value}))
		      and a.del_flag='0'	
	</select>	

	<!-- 根据工位管理ID查找匹配规则及未选择选择对应工装车 -->
	<select id="getNoChooseFrock" parameterType="String" resultType="cn.rootyu.rad.modules.stafrocktype.entity.StaFrock">
		select lf.id as "frockId", lf.frock_num as "frockNum"
		  from llm_frock lf
		 where del_flag = '0'
		  <!-- and not exists (select *
		          from LLM_STA_FROCK t
		         where t.del_flag = '0'
		           and t.frock_id = lf.id)
		
		union all
		select lf.id as "frockId", lf.frock_num as "frockNum"
		  from llm_frock lf
		 where lf.del_flag = '0'
		   and exists (select *
		          from LLM_STA_FROCK t
		         where t.del_flag = '0'
		           and t.station_id = #{stationId} 
		           and t.frock_id = lf.id)
	              --> 	
	</select>

	<!-- 根据工位管理ID查找匹配规则及选择对应工装车 -->
	<select id="getChooseFrock" parameterType="String" resultType="String">
		select lf.id as "frockId"
	      from llm_frock lf
	     where lf.del_flag = '0'  and  exists
	           (select  * from LLM_STA_FROCK t where t.del_flag = '0' and t.station_id=#{stationId} and t.frock_id = lf.id)

	</select>	
	<!-- 获取所有工装车 -->
	<select id="getAllFrock" resultType="cn.rootyu.rad.modules.stafrocktype.entity.StaFrock">
		select lf.id
	      from llm_frock lf
	     where lf.del_flag = '0'  

	</select>	
	<!-- 插入工位工装表关系表 -->
	<insert id="insertStaFrock" parameterType="cn.rootyu.rad.modules.stafrocktype.entity.StaFrock">
		INSERT INTO LLM_STA_FROCK(
			id,
			station_id,
			frock_id,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{stationId},
			#{frockId},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>   
	<update id="deleteStaFrock" parameterType="cn.rootyu.rad.modules.stafrock.entity.Stainfo" >
		update  LLM_STA_FROCK set del_flag = #{DEL_FLAG_DELETE} where station_id = #{id}
	</update>   
	<!-- 获取仓库管理员 -->
	<select id="getStorUserList" resultType="User">
		select t.id, t.name, t.office_id as "office.id"
		  from sys_user t
		  join sys_user_role t1 on t.id = t1.user_id
		  join sys_role t2 on t1.role_id = t2.id
		 where t2.id = '4a729011ff9046ef9f2729caaa9e2bee' and t2.del_flag='0'	
	</select>
	
	<!-- 获取仓库管理员所在库区集合 -->
	<select id="getReservoirList" resultType="Office" >
		select id
		  from (select m.id
		          from sys_office m
		         start with m.id = #{id}
		        connect by prior m.parent_id = m.id
		        and m.del_flag = #{DEL_FLAG_NORMAL}
		        ) k
		 where k.id in (SELECT a.id
		                  FROM sys_office a
		                 where a.parent_id = #{WULIU_OFFICE_ID}
		                   and a.del_flag = #{DEL_FLAG_NORMAL})
	</select>	
		
	<!-- 更新库管员 -->	
	<update id="updateStorekeeper">
		UPDATE llm_wkstadoc SET 
			pk_storekeeper = #{pkStorekeeper},
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE id = #{id}
		  and del_flag = #{DEL_FLAG_NORMAL}
	</update>	
	
	<!-- 获取当前项目仓库下所有货位 -->
	<select id="getAllCargDocTree" parameterType="java.util.HashMap" resultType="cn.rootyu.rad.modules.stafrock.entity.CargDoc">
		select * from (
		select a.id,
		       case when a.grade ='3' then a.parent_id 
		       when a.grade ='2' then '0' end  AS "parent.id",
		       case when a.grade ='3' then a.parent_id 
		       when a.grade ='2' then '0' end as parentId,
		       a.name,
		       a.code,
		       a.grade,
		       case when a.grade ='3' then (select name from llm_cargdoc where id = a.parent_id) 
		       when a.grade ='2' then '' end AS "parent.name"
		  from llm_cargdoc a
		 where a.grade in ('2', '3')
		   and (a.id in (select t1.pk_cargcol
		                   from llm_stor_carg t1
		                  where t1.pk_stordoc = #{storDocId})
		       or a.parent_id in
		       	   (select t2.pk_cargcol
		              from llm_stor_carg t2
		             where t2.pk_stordoc = #{storDocId}			             
			             ))
		   and a.del_flag = '0'	
         <!--   and a.id not in
			 (select b.pk_cargdoc
	          from llm_sta_carg b
	         where a.del_flag = '0') 	
	    union all
		select a.id,
		       case when a.grade ='3' then a.parent_id 
		       when a.grade ='2' then '0' end  AS "parent.id",
		       case when a.grade ='3' then a.parent_id 
		       when a.grade ='2' then '0' end as parentId,
		       a.name,
		       a.code,
		       a.grade,
		       case when a.grade ='3' then (select name from llm_cargdoc where id = a.parent_id) 
		       when a.grade ='2' then '' end AS "parent.name"
		  from llm_cargdoc a
		 where a.del_flag = '0'
	       and id in (select pk_cargdoc from llm_sta_carg t where t.pk_stamanfil =#{wkStocId} and del_flag  ='0') --> 
	       ) order by  code	
	       
	</select>
	<!-- 获取已经选择的货位 -->
	<select id="getCargDocIdList" parameterType="cn.rootyu.rad.modules.stafrock.entity.StaCarg" resultType="String">
		select pk_cargdoc as "id" from llm_sta_carg t where t.pk_stamanfil =#{pkStamanfil} and del_flag  =#{DEL_FLAG_NORMAL} 
	<!-- 保存工位管理档案ID和货位的关系 -->
	</select>
		<insert id="saveStaCargMenu" parameterType="cn.rootyu.rad.modules.stafrock.entity.StaCarg">
		INSERT INTO LLM_STA_CARG(
			id,
			PK_STAMANFIL,
			PK_CARGDOC,			
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{pkStamanfil},
			#{pkCargdoc},			
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	<!-- 删除工位管理档案ID和货位的关系 -->
	<update id="deleteStaCargMenu" parameterType="cn.rootyu.rad.modules.stafrock.entity.StaCarg">
		update  LLM_STA_CARG set del_flag= #{DEL_FLAG_DELETE} where PK_STAMANFIL = #{pkStamanfil}
	</update>	
</mapper>